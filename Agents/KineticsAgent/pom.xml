<?xml version="1.0" encoding="UTF-8"?>
<project 
    xmlns="http://maven.apache.org/POM/4.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.cmclinnovations</groupId>
	<artifactId>KineticsAgent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>KineticsAgent</name>
    <packaging>war</packaging>

    <!-- Use the Parent POM to set common versions for dependencies -->
    <parent>
        <groupId>uk.ac.cam.cares.jps</groupId>
        <artifactId>jps-parent-pom</artifactId>
        <version>2.0.0</version>
    </parent>

    <!-- Project properties -->
	<properties>
		<spring-version>5.3.22</spring-version>
        <spring-security-version>5.7.3</spring-security-version>
        <jps.base.version>1.15.1-fix-kinetics-agent-SNAPSHOT</jps.base.version>
	</properties>

    <!-- Profiles are used to switch between building for development and production 
    environments. Use "-P profile-id" within an mvn command to build with a profile -->
    <profiles>
        <!-- This profile should be used for development builds. -->
        <profile>
            <id>dev-profile</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- Set property to download development logging config -->
                <log.artifact>java-logging-dev</log.artifact>
            </properties>
        </profile>
        
        <!-- This profile should be used for production builds. -->
        <profile>
            <id>prod-profile</id>
            <properties>
                <!-- Set property to download production logging config -->
                <log.artifact>java-logging-prod</log.artifact>
            </properties>
        </profile>
    </profiles>

	<build>
		<finalName>KineticsAgent</finalName>

		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
                    <source>11</source>
                    <target>11</target>
					<release>11</release>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.4</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>

            <!-- Used to build into a WAR file and ensures everything in ./WEB-INF
            gets copied into the final WAR file's internal WEB-INF directory. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <!-- Version, configuration, and executions should be pulled from the 
                parent POM unless overridden here. -->
            </plugin>

            <!-- Downloads and extracts ZIP archives from Maven repository -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <!-- Version, configuration, and executions should be pulled from the 
                parent POM unless overridden here. -->
            </plugin>
		</plugins>
	</build>

    <dependencies>
        <!-- JPS Base Library -->
		<dependency>
			<groupId>uk.ac.cam.cares.jps</groupId>
			<artifactId>jps-base-lib</artifactId>
			<version>${jps.base.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
		</dependency>

        <!-- Servlet API -->
        <dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>

        <!-- RDF4J support -->
        
        <dependency>
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-model</artifactId>
            
        </dependency>

        <!-- SSH Connectivity -->
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.55</version>
		</dependency>
		
		<!-- Common IO Functionality -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
        </dependency>

        <!-- Spring Core Utilities -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<!-- Bean Factory and JavaBeans utilities -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<!-- Spring MVC for Servlet Environments -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring-version}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Spring security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring-security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-security-version}</version>
		</dependency>

	</dependencies>

</project>
