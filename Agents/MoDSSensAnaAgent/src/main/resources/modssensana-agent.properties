##########################################################################
# These properties are specific to MoDSSensAna Agent. When set these 
# will override the properties set in the generic SlurmJobAPI.
# Author: Jiaru Bai (jb2197@cam.ac.uk)
##########################################################################
# The following list of properties are required for setting-up a job.
##########################################################################
hpc.server.login.user.name=jb2197
hpc.server.login.user.password=
agent.class=MoDSSensAnaAgent
agent.completed.job.space.prefix=CompletedJobs
agent.failed.job.space.prefix=FailedJobs
hpc.address=login-skylake.hpc.cam.ac.uk
input.file.name=input
input.file.extension=.zip
output.file.name=output
output.file.extension=.zip
executable.file=citychem.sh
chk.point.file.extension=.chk
json.file.extension=.json
json.input.file.name=input
slurm.script.file.name=Slurm.sh
job.preprint.directive=#p
#Use the following server url if the KG stored on localhost. 
#rdf4j.server.url=http://localhost:8080/rdf4j-server/
#Use the following server url if the KG stored on como server. 
rdf4j.server.url=https://como.ceb.cam.ac.uk/rdf4j-server/
rdf4j.repository.ontospecies=ontospecies
rdf4j.repository.ontokin=ontokin
rdf4j.repository.ontochemexp=ontochemexp
#maximum number of jobs allowed to run at a time
max.number.of.hpc.jobs=1
#initial delay to start the agent and periodic action interval to check the status of jobs
agent.initial.delay.to.start=120
agent.periodic.action.interval=600
##########################################################################
# The following list of properties are required for post-processing.
##########################################################################


##########################################################################
# Delete below later if it turns out to be never used
##########################################################################
#The following property is used for calling the MoDSSensAnaAgent.
#If you run MoDSSensAnaAgent on localhost use the following URL. If you run on Claudius, use the one after.
#sensana.agent.http.request.first.part=http://localhost:8080/MoDSSensAnaAgent/job/request?query=
#sensana.agent.http.request.first.part=http://localhost/MoDSSensAnaAgent/job/request?query=
##
#The following property is used for calling the MoDSMechCalibAgent.
#If you run MoDSMechCalibAgent on localhost use the following URL. If you run on Claudius, use the one after.
#mechcalib.agent.http.request.first.part=http://localhost:8080/MoDSMechCalibAgent/job/request?query=
#mechcalib.agent.http.request.first.part=http://localhost/MoDSMechCalibAgent/job/request?query=
##
##The URL of the knowledge graph upload service depends on the server where we hold the ontokin runs.
##If it runs on Vienna, use the following URL. 
#kg.url.to.upload.result.via.json.input=https://localhost:8080/ontocompchemupload/convert?input=
##
##If the ontocomchemupload service runs on any local host with http protocol, use the following URL.
#kg.url.to.upload.result.via.json.input=http://localhost:8080/ontocompchemupload/convert?input=
##
## If the ontocomchemupload service runs on Claudius, use the following URL.
#kg.url.to.upload.result.via.json.input=http://theworldavatar.com/ontocompchemupload/convert?input=
#The following property is used for firing query to the OntoKin repository.
#If you run DFTAgent on localhost use the following URL. If you run on Claudius, use the one after.
#rdf4j.ontokin.repository.query.iri=http://localhost:8080/rdf4j-server/repositories/ontokin?query=
#rdf4j.ontokin.repository.id=ontokin