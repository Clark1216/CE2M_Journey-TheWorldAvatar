# baseURI: http://theworldavatar.com/ontology/ontogasgrid/gas_grid_network_spin
# imports: http://spinrdf.org/spl
# imports: http://www.theworldavatar.com/ontology/ontogasgrid/gas_network_system.owl
# prefix: gas_grid_network_spin

@prefix arg: <http://spinrdf.org/arg#> .
@prefix gas_grid_network_spin: <http://theworldavatar.com/ontology/ontogasgrid/gas_grid_network_spin#> .
@prefix gas_network_system: <http://www.theworldavatar.com/ontology/ontogasgrid/gas_network_system.owl#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://theworldavatar.com/ontology/ontogasgrid/gas_grid_network_spin>
  rdf:type owl:Ontology ;
  owl:imports <http://spinrdf.org/spl> ;
  owl:imports <http://www.theworldavatar.com/ontology/ontogasgrid/gas_network_system.owl> ;
  owl:versionInfo "Created with TopBraid Composer" ;
.
gas_network_system:GasPipeConnection
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object gas_network_system:GasPipelineStart ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "start" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "latitude" ;
              ] ;
            sp:predicate gas_network_system:hasLatitude ;
            sp:subject [
                sp:varName "start" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "longitude" ;
              ] ;
            sp:predicate gas_network_system:hasLongitude ;
            sp:subject [
                sp:varName "start" ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object gas_network_system:GasPipeConnection ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "start" ;
              ] ;
            sp:predicate gas_network_system:hasPipeConnectionOutput ;
            sp:subject spin:_this ;
          ]
          [
            sp:object gas_network_system:GasPipelineStart ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "start" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "latitude" ;
              ] ;
            sp:predicate gas_network_system:hasLatitude ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "longitude" ;
              ] ;
            sp:predicate gas_network_system:hasLongitude ;
            sp:subject spin:_this ;
          ]
        ) ;
      rdfs:comment "infers latitude and longitude for pipeline start part based on pipe connection latitude and longitude" ;
    ] ;
.
gas_network_system:GasPipelineEnd
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "latitude" ;
              ] ;
            sp:predicate gas_network_system:hasLatitude ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "longitude" ;
              ] ;
            sp:predicate gas_network_system:hasLongitude ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "connection" ;
              ] ;
            sp:predicate gas_network_system:entersPipeConnection ;
            sp:subject spin:_this ;
          ]
          [
            sp:object gas_network_system:GasPipeConnection ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "connection" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "latitude" ;
              ] ;
            sp:predicate gas_network_system:hasLatitude ;
            sp:subject [
                sp:varName "connection" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "longitude" ;
              ] ;
            sp:predicate gas_network_system:hasLongitude ;
            sp:subject [
                sp:varName "connection" ;
              ] ;
          ]
        ) ;
      rdfs:comment "Infers latitude and longitude for pipeline end parts based on latitude and longitude of pipe connection" ;
    ] ;
.
