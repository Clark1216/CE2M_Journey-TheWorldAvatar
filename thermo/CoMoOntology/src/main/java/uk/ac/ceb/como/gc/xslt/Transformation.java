package uk.ac.ceb.como.gc.xslt;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FilenameFilter;
import java.io.IOException;
import java.io.InputStream;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;

/**
 * 
 * @author nk510 This class implements methods for xslt transformations from
 *         CompChem XML files to RDF graph as Abox assertions of CoMo CompChem
 *         ontology ver 0.1.
 *         
 */

public class Transformation {

	/**
	 * 
	 * @author nk510 Folder path where generated CompChem XML files are saved.
	 * 
	 */

	static String folderPath = "src/test/resources/compchem_xml/"; //xslt

	/**
	 * @author nk510 Path to XSLT file.
	 *
	 */
	
	static String xsltPath = "src/test/resources/xslt/compchem_to_gnvc_rdf.xsl";   //Ti-g09/test.xsl;   
	
	public static void main(String[] args) throws TransformerException, IOException {

		/**
		 * 
		 * @author nk510 File list of all CompChem xml files stored in folder path.
		 * 
		 */

		File[] fileList = getFileList(folderPath);

		/**
		 * 
		 * @author nk510 Iterates over file list given in folder
		 *         'src/test/resources/compchem_xml/'
		 * 
		 */	

		for (File f : fileList) {

			InputStream xmlSource = new FileInputStream(f.getPath());

			StreamSource xsltSource = new StreamSource(xsltPath);
			
			/**
			 * @author nk510 Creates output path for each CompChem XML file from file list.
			 */
			
			String outputPath = "src/test/resources/ontology/" + f.getName().replace(".xml", "").toString() + ".rdf";

			FileOutputStream outputStream = new FileOutputStream(new File(outputPath));

			/**
			 * @author nk510 Runs XSLT transformation for each CompChem XML file form file
			 *         list.
			 */
			
			trasnformation(xmlSource, outputStream, xsltSource);

		}
	}

	/**
	 * @author nk510
	 * @param XmlSource
	 *            is a source CompChem XML file generated by parsing Gaussian files
	 *            (g09)
	 * @param outputStream
	 *            is RDF file generated by using XSLT transformations.
	 * @param xsltSource
	 *            is file that contains the implementation of transformations
	 *            (business logic) from CompChem xml file to RDF file.
	 * @throws TransformerException
	 * 
	 *             This method implements transformation from CompChem XML files to
	 *             RDF files by using Java 8 @see <a href=
	 *             "https://docs.oracle.com/javase/7/docs/api/javax/xml/transform/TransformerFactory.html">TransformerFactory</a>
	 *             class.
	 */

	public static void trasnformation(InputStream XmlSource, FileOutputStream outputStream, StreamSource xsltSource)
			throws TransformerException {

		TransformerFactory transformerFactory = TransformerFactory.newInstance();
		Transformer transformer = transformerFactory.newTransformer(xsltSource);		
		transformer.transform(new StreamSource(XmlSource), new StreamResult(outputStream));

	}

	/**
	 * @author nk510
	 * @param folderPath
	 * @return Method reads all CompChem XML files in given folder path. Supported
	 *         file extension is '.xml'.
	 */

	public static File[] getFileList(String folderPath) {

		File dir = new File(folderPath);

		File[] fileList = dir.listFiles(new FilenameFilter() {
			public boolean accept(File dir, String name) {
				return (name.endsWith(".xml"));

			}
		});

		return fileList;
	}
}