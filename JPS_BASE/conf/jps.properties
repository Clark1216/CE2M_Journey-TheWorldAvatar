host = www.theworldavatar.com
port = 80
url.scheme = http://
url.buildingsquery.berlin = http://www.theworldavatar.com:80/damecoolquestion/berlinbuildings/query
url.buildingsquery.thehague = http://www.theworldavatar.com:80/damecoolquestion/thehaguebuildings/query
url.buildingsquery.singapore = http://www.theworldavatar.com:80/damecoolquestion/mbs/query
url.buildingsquery.hongkong = http://www.theworldavatar.com:80/damecoolquestion/hongkongbuildingsrealdata/query
url.positionquery = http://www.theworldavatar.com:80/JPS_POSTGRESQL
url.jps_aws = http://localhost:8084/watcher
reldir.python = python
reldir.workingdir = workingdir
absdir.root = C://TOMCAT/webapps/ROOT
absdir.jpsdata.workingdir = C://JPS_DATA/workingdir
absdir.jpsdata.workingdir.jps_men = C://JPS_DATA/workingdir/JPS_MEN
#absdir.knowledgebase.agents = C://TOMCAT/webapps/ROOT/kb/agents/admsservicesWithWasteProduct
absdir.knowledgebase.agents = C://TOMCAT/webapps/ROOT/kb/agents
scenario.usecasedirectory.separator = /
apply.longtime.nuclear.gams=false
# dataset configuration
#
dataset.scenario.url = http://www.theworldavatar.com:80/jps/scenario
dataset.scenario.kbclass = uk.ac.cam.cares.jps.scenario.kb.KnowledgeBaseFileBased
dataset.scenario.endpoint.url = 
#url.rdf.metadata = http://www.theworldavatar.com:80/damecoolquestion/jpsmetadatatest
dataset.meta.url = http://www.theworldavatar.com:80/jps/data/meta
dataset.meta.kbclass = uk.ac.cam.cares.jps.scenario.kb.KnowledgeBaseRdf4jServer
dataset.meta.endpoint.url = http://localhost:8081/rdf4j-server/repositories/myjpsmetadatasetinmemory